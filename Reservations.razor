@page "/reservations"

@using Assignment2.Components.Pages.Data;
@using System.Text;


<style>
    * {
    box-sizing: border-box;
    }

    /* Create two equal columns that floats next to each other */
    .column {
    float: left;
    width: 50%;
    padding: 10px;
    height: 350px;
    }

    /* Clear floats after the columns */
    .row:after {
    content: "";
    display: table;
    clear: both;
    }

    .ColumnB {
    content: "";
    display: table;
    clear: both;
    }

    .myself .property {
    width: 25%;
    display: inline-block;
    box-sizing: border-box;
    text-align: right;
    }

    .myself .value {
    text-align: left;
    padding-left: 10px;
    width: 70%;
    display: inline-block;
    box-sizing: border-box;
    }


    .container {
    position: relative;
    }

    .center {
    position: absolute;
    left: 50%;
    }

    .columnC {
    float: left;
    width: 100%;
    padding: 10px;
    height: 150px;
    box-sizing: border-box;
    }

    .columnB {
    clear: both;
    width: 100%;
    padding: 10px;
    height: 150px;
    margin-top: 450px;
    }

    .columnD {
    clear: both;
    width: 100%;
    padding-top: 130px;
    height: 350px;

    }

    .myself .valueC {
    text-align: left;
    padding-left: 10px;
    width: 70%;
    display: inline-block;
    box-sizing: border-box;
    }

    .myself .propertyC {
    width: 25%;
    display: inline-block;
    box-sizing: border-box;
    text-align: right;
    }

    .form-control {
    width: 100%;
    }

    .button1 {
    width: 300px;
    }
</style>

<div class="row">    
    <div class="columnC myself">
        <div class="row">
            <div class="center">
                <h3>Check Reservations By Code, Name, or Airline</h3>
            </div>
        </div>
        <br />
        <div>
            <label>Reservation Code: </label><input class="form-control" type="text" id="code" name="code" @bind="inputResCode">
            <label>Airline: </label><input class="form-control" type="text" id="airline" name="airline" @bind="inputAirline">
            <label>Traveller Name: </label><input class="form-control" type="text" id="name" name="name" @bind="inputName">
            <br />

            <div class="row">
                <div class="center">
                    <button class="btn btn-primary" @onclick="SearchReservations">Find Reservations</button>
                </div>
            </div>
        </div>
        <br />
        <br />
        <br />
        <div class="row">
            <div class="center">
                <h3>Your Reservations</h3>
            </div>
        </div>
        <br />
        <br />
        <select class="form-control" onfocus="this.selectedIndex = -1;" @bind="currentReservation">
            <option value=" " selected>Please select a reservation</option>
            @if (resNew.Count() == 0)
            {
                <option>Loading...</option>
            }
            else
            {
                @foreach (var res in resNew)
                {
                    <option value="@res.Code"> @res.Code,@res.FlightCode,@res.Airline,@res.Cost,@res.Name,@res.Citizenship,@res.Active </option>
                }
            }
        </select>

        <br />
        <div>           
            <br />
            <div class="row">
                <div class="center">
                    <button class="btn btn-primary" @onclick="CancelReservations">Cancel Reservations</button>
                </div>
            </div>
        </div>
    </div>
</div>


@code {


    string inputResCode = "";
    string inputAirline = "";
    string inputName = "";
    string currentReservation;

    ReservationManager rm = new ReservationManager();
    List<Reservation> reservations;
    List<Reservation> resNew = new List<Reservation>();

    /*This is the method called after the "Find Flights" button is clicked.
     * It will find reserved flights from reservation.csv file according to
     * user inputs of reservation code and/or airline and/or name.
    */

    /// <summary>
    /// Checks if any of the 3 "inputs": inputResCode, inputAirLine, and inputName are nto equal to ""
    /// if any are, begins to check them against all reservations in the system, if one of the inputs is null or matches the current reservation value
    /// adds one to conditionalsPassed, if conditionalsPassed is == 3 at the end of the 3 if statements, adds that reservation to a choosable reservation list
    /// </summary>
    private void SearchReservations()
    {
        reservations = ReservationManager.GetReservations();
        resNew.Clear();
        Reservation NewReservation;

        if ((inputResCode != "") || (inputAirline != "") || (inputName != ""))
        {
            int conditionalsPassed = 0;
            NewReservation = new Reservation { };

            foreach (var curRes in reservations)
            {
                if (inputResCode is null || inputResCode.ToUpper() == curRes.Code.ToUpper())
                {
                    conditionalsPassed++;
                }

                if (inputAirline is null || inputAirline.ToUpper() == curRes.Airline.ToUpper())
                {
                    conditionalsPassed++;
                }

                if (inputName is null || inputName.ToUpper() == curRes.Airline.ToUpper())
                {
                    conditionalsPassed++;
                }

                if (conditionalsPassed == 3){
                    NewReservation = new Reservation(curRes.Code, curRes.FlightCode, curRes.Airline, curRes.Cost, curRes.Name, curRes.Citizenship, curRes.Active);
                    resNew.Add(NewReservation);
                }
            }
        }
        else
        {
            resNew = reservations;
        }
    }

    /*This is the method called after the "Find Flights" button is clicked.
    * It will find reserved flights from reservation.csv file according to
    * user inputs of reservation code and/or airline and/or name.
    */
    private void CancelReservations()
    {
        foreach (var res in reservations)
        {
            if (currentReservation == res.Code)
            {
                rm.UpdateReservation(res);
                break;
            }                
        }

        reservations = ReservationManager.GetReservations();
        Reservation canceledReservation = new Reservation();
        resNew.Clear();
        foreach (var res in reservations)
        {
            if (currentReservation.ToUpper() == res.Code.ToUpper())             
            {
                canceledReservation = new Reservation(res.Code, res.FlightCode, res.Airline, res.Cost, res.Name, res.Citizenship, res.Active);
                resNew.Add(canceledReservation);
                break;
            }          
        }
    }
}
